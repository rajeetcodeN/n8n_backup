{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "LinkedIn1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn1": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "LinkedIn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        []
      ]
    },
    "Supabase5": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn2": {
      "main": [
        [
          {
            "node": "Supabase6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase6": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "LinkedIn3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn3": {
      "main": [
        [
          {
            "node": "Supabase7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase7": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "LinkedIn2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Supabase5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-28T07:17:07.006Z",
  "id": "TgI1estlJfeFzRw3",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "posting",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1340,
        360
      ],
      "id": "38501344-2762-43e5-b45a-47dfad323a8d",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "schedulepost",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "time_of_posting",
              "condition": "lte",
              "keyValue": "={{ $json.timestamp }}"
            },
            {
              "keyName": "status",
              "condition": "eq",
              "keyValue": "approved"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1180,
        360
      ],
      "id": "89865112-705c-4252-9dff-4617ed28c881",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "HCQXqjukUb1jxXPk",
          "name": "Supabase account 4(rn dbt)"
        }
      }
    },
    {
      "parameters": {
        "person": "ZTphelMvjj",
        "text": "={{ $json.post }}",
        "shareMediaCategory": "IMAGE",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        360,
        320
      ],
      "id": "161d02b0-d720-4126-b006-fe32d53155db",
      "name": "LinkedIn",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "5Mtt6Ml6y4WUa0hy",
          "name": "LinkedIn account 2 test dbt"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        20,
        360
      ],
      "id": "d9566e46-9c41-4eca-bb08-ba4c0d1fce2a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const markdown = item.json.image_markdown;\n\n  // Log the markdown to check what it contains (for debugging)\n  console.log(\"Markdown:\", markdown);\n\n  // Use a more precise regex to match only image URLs in markdown format ![alt](url)\n  const match = markdown.match(/!\\[.*?\\]\\((.*?)\\)/);\n\n  const url = match ? match[1] : null;\n\n  return {\n    json: {\n      url\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -140,
        360
      ],
      "id": "25610a2b-dcb0-42cb-9a93-750da7548b13",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "gets post from DB ",
        "height": 400,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1220,
        220
      ],
      "typeVersion": 1,
      "id": "59117b24-ebd0-49af-8483-ff658dff8dfc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "schedulepost",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "posted"
            },
            {
              "fieldId": "urn",
              "fieldValue": "={{ $json.urn }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        520,
        320
      ],
      "id": "93601239-4bbe-4f45-9c17-a943ce3dd6e4",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "HCQXqjukUb1jxXPk",
          "name": "Supabase account 4(rn dbt)"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1000,
        360
      ],
      "id": "d0d6e448-7302-407d-bc03-6c4dbd283c38",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9416adb8-989f-4fef-8738-0dc154abc3a8",
              "name": "post",
              "value": "={{ $json.post }}",
              "type": "string"
            },
            {
              "id": "9803cb19-caa0-402c-bd7a-7ff29af0aa69",
              "name": "image_markdown",
              "value": "={{ $json.image_markdown }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -300,
        360
      ],
      "id": "fc90706c-3f1e-4824-a650-f20eaf75199e",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d64df695-f465-4fa3-a246-32593426aee7",
              "leftValue": "={{ $json.image_markdown }}",
              "rightValue": "qpmrmtlfwlixlplwpllz",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -760,
        360
      ],
      "id": "6ee86f63-9b45-4971-bfca-03e4ec6df9c1",
      "name": "If"
    },
    {
      "parameters": {
        "person": "ZTphelMvjj",
        "text": "={{ $json.post }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "46bcbf09-3e02-4394-b6ec-09a42a1f2683",
      "name": "LinkedIn1",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "5Mtt6Ml6y4WUa0hy",
          "name": "LinkedIn account 2 test dbt"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "schedulepost",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "posted"
            },
            {
              "fieldId": "urn",
              "fieldValue": "={{ $json.urn }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        180,
        0
      ],
      "id": "082944d5-ddf2-4e0b-bf99-79d0cefbcd8a",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "HCQXqjukUb1jxXPk",
          "name": "Supabase account 4(rn dbt)"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        160,
        260
      ],
      "id": "3a48eafe-f8b6-4227-95c3-b949443d3c90",
      "name": "Merge1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "post_queue",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "posted"
            },
            {
              "fieldId": "urn",
              "fieldValue": "={{ $json.urn }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1500,
        -220
      ],
      "id": "e87e1a3f-00fd-4741-9670-e82b7a3c5ea3",
      "name": "Supabase3",
      "credentials": {
        "supabaseApi": {
          "id": "HCQXqjukUb1jxXPk",
          "name": "Supabase account 4(rn dbt)"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "schedulepost",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "posted"
            },
            {
              "fieldId": "urn",
              "fieldValue": "={{ $json.urn }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1260,
        -20
      ],
      "id": "cee2923c-938d-4621-8541-93506f982e2f",
      "name": "Supabase4",
      "credentials": {
        "supabaseApi": {
          "id": "HCQXqjukUb1jxXPk",
          "name": "Supabase account 4(rn dbt)"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const markdown = item.json.image_markdown;\n  const match = markdown.match(/\\((.*?)\\)/);\n  const url = match ? match[1] : null;\n\n  return {\n    json: {\n      url\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1220,
        200
      ],
      "id": "f86d26cc-eefb-49a0-a6a9-c717695a2936",
      "name": "Code1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1640,
        340
      ],
      "id": "ce06277b-cf44-4613-a752-871fa31613bc",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "schedulepost",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "time_of_posting",
              "condition": "lte",
              "keyValue": "={{ $json.currentDate }}"
            },
            {
              "keyName": "status",
              "condition": "eq",
              "keyValue": "approved"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1180,
        1180
      ],
      "id": "f0477774-c4aa-40e2-8b56-f513ebdbdb89",
      "name": "Supabase5",
      "credentials": {
        "supabaseApi": {
          "id": "HCQXqjukUb1jxXPk",
          "name": "Supabase account 4(rn dbt)"
        }
      }
    },
    {
      "parameters": {
        "person": "ZTphelMvjj",
        "text": "={{ $json.post }}",
        "shareMediaCategory": "IMAGE",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        360,
        1140
      ],
      "id": "ac05751a-f671-4a82-924a-161a962e3ac9",
      "name": "LinkedIn2",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "5Mtt6Ml6y4WUa0hy",
          "name": "LinkedIn account 2 test dbt"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        20,
        1180
      ],
      "id": "196e088f-2b89-4dc4-aec1-3633848ccf44",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const markdown = item.json.image_markdown;\n\n  // Log the markdown to check what it contains (for debugging)\n  console.log(\"Markdown:\", markdown);\n\n  // Use a more precise regex to match only image URLs in markdown format ![alt](url)\n  const match = markdown.match(/!\\[.*?\\]\\((.*?)\\)/);\n\n  const url = match ? match[1] : null;\n\n  return {\n    json: {\n      url\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -140,
        1180
      ],
      "id": "ec9dc528-1523-48da-8b74-9da8ff0d6e6d",
      "name": "Code2"
    },
    {
      "parameters": {
        "content": "gets post from DB ",
        "height": 400,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1220,
        1040
      ],
      "typeVersion": 1,
      "id": "540b448d-7837-4569-b2a8-9a6ea80e4440",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "schedulepost",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase5').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "posted"
            },
            {
              "fieldId": "urn",
              "fieldValue": "={{ $json.urn }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        520,
        1140
      ],
      "id": "53bbad68-0a2f-4794-a3c5-72b7022fac7d",
      "name": "Supabase6",
      "credentials": {
        "supabaseApi": {
          "id": "HCQXqjukUb1jxXPk",
          "name": "Supabase account 4(rn dbt)"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1000,
        1180
      ],
      "id": "22e5aa7e-566f-4510-80e5-30cc10aca580",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9416adb8-989f-4fef-8738-0dc154abc3a8",
              "name": "post",
              "value": "={{ $json.post }}",
              "type": "string"
            },
            {
              "id": "9803cb19-caa0-402c-bd7a-7ff29af0aa69",
              "name": "image_markdown",
              "value": "={{ $json.image_markdown }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -300,
        1180
      ],
      "id": "b1422b25-34bd-438a-9e47-cd29f1d5092f",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d64df695-f465-4fa3-a246-32593426aee7",
              "leftValue": "={{ $json.image_markdown }}",
              "rightValue": "qpmrmtlfwlixlplwpllz",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -760,
        1180
      ],
      "id": "b4ef8e3f-603e-4690-bb82-0f736a9530b9",
      "name": "If1"
    },
    {
      "parameters": {
        "person": "ZTphelMvjj",
        "text": "={{ $json.post }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        0,
        820
      ],
      "id": "6f8e0737-d81a-4e6e-ab0b-51a37c94074a",
      "name": "LinkedIn3",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "5Mtt6Ml6y4WUa0hy",
          "name": "LinkedIn account 2 test dbt"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "schedulepost",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase5').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "posted"
            },
            {
              "fieldId": "urn",
              "fieldValue": "={{ $json.urn }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        180,
        820
      ],
      "id": "f364d6b8-3285-46ab-96b3-e1e223d9461e",
      "name": "Supabase7",
      "credentials": {
        "supabaseApi": {
          "id": "HCQXqjukUb1jxXPk",
          "name": "Supabase account 4(rn dbt)"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        160,
        1080
      ],
      "id": "aeb12ff2-7b31-4703-9c07-2a8a9c71a0f0",
      "name": "Merge"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -1460,
        1180
      ],
      "id": "ca837a42-7b5b-4b2e-bc62-bf0fb361fac7",
      "name": "Date & Time"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1760,
        1360
      ],
      "id": "bcced3a3-3e92-4a6c-939b-20bf207abe59",
      "name": "When clicking ‘Test workflow’"
    }
  ],
  "origin": "n8n",
  "pinData": {},
  "repo": {
    "owner": "rajeetcodeN",
    "name": "n8n_backup"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-07-28T07:17:07.011Z",
      "updatedAt": "2025-07-28T07:17:07.011Z",
      "role": "workflow:owner",
      "workflowId": "TgI1estlJfeFzRw3",
      "projectId": "ZwnuQmKDS754LNCN"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-17T11:42:38.000Z",
  "versionId": "1ef15335-510b-41e5-9a15-0aecbae80b12"
}